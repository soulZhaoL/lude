hold_num = 5 # 持有数量
threadhold_num = 4 # 轮动阈值
df.loc[df.list_days <= 3, 'filter'] = True # 排除新债
df.loc[df.left_years < 0.5, 'filter'] = True # 排除到期日小于1年的标的
df.loc[df.close > 135, 'filter'] = True  # 排除价格
df.loc[df.close < 100, 'filter'] = True  # 排除价格
[{'name': 'low', 'weight': 1, 'ascending': False},
 {'name': 'pct_chg', 'weight': 2, 'ascending': False},
 {'name': 'stoch1', 'weight': 4, 'ascending': True},
 {'name': 'theory_bias', 'weight': 5, 'ascending': True},
 {'name': 'volatility_stk5', 'weight': 5, 'ascending': False},
 {'name': 'stoch3', 'weight': 5, 'ascending': True}]
 最优参数下的目标函数值： 0.2707294328975467


hold_num = 5 # 持有数量
threadhold_num = 4 # 轮动阈值
df.loc[df.list_days <= 3, 'filter'] = True # 排除新债
df.loc[df.left_years < 0.5, 'filter'] = True # 排除到期日小于1年的标的
df.loc[df.close > 140, 'filter'] = True  # 排除价格
df.loc[df.close < 100, 'filter'] = True  # 排除价格
[{'name': 'theory_bias', 'weight': 3, 'ascending': True},
 {'name': 'stoch3', 'weight': 5, 'ascending': True},
 {'name': 'volatility_stk5', 'weight': 1, 'ascending': False}]
 最优参数下的目标函数值： 0.2633567204118896


hold_num = 5 # 持有数量
threadhold_num = 4 # 轮动阈值
df.loc[df.list_days <= 3, 'filter'] = True # 排除新债
df.loc[df.left_years < 0.5, 'filter'] = True # 排除到期日小于1年的标的
df.loc[df.close > 140, 'filter'] = True  # 排除价格
df.loc[df.close < 100, 'filter'] = True  # 排除价格
[{'name': 'ytm', 'weight': 5, 'ascending': True},
 {'name': 'stoch2', 'weight': 3, 'ascending': True},
 {'name': 'dblow', 'weight': 2, 'ascending': True},
 {'name': 'volatility_stk', 'weight': 3, 'ascending': False}]
 最优参数下的目标函数值： 0.27554698145043677


hold_num = 5 # 持有数量
threadhold_num = 4 # 轮动阈值
df.loc[df.list_days <= 3, 'filter'] = True # 排除新债
df.loc[df.left_years < 0.5, 'filter'] = True # 排除到期日小于1年的标的
df.loc[df.close > 140, 'filter'] = True  # 排除价格
df.loc[df.close < 100, 'filter'] = True  # 排除价格
[{'name': 'theory_bias', 'weight': 5, 'ascending': True},
 {'name': 'theory_conv_prem', 'weight': 3, 'ascending': True},
 {'name': 'stoch3', 'weight': 4, 'ascending': True},
 {'name': 'volatility_stk20', 'weight': 1, 'ascending': False},
 {'name': 'pre_close', 'weight': 5, 'ascending': False}]
 最优参数下的目标函数值： 0.26465008869892204


hold_num = 5 # 持有数量
threadhold_num = 4 # 轮动阈值
df.loc[df.list_days <= 3, 'filter'] = True # 排除新债
df.loc[df.left_years < 0.5, 'filter'] = True # 排除到期日小于1年的标的
df.loc[df.close > 140, 'filter'] = True  # 排除价格
df.loc[df.close < 100, 'filter'] = True  # 排除价格
[{'name': 'stoch_signal3', 'weight': 5, 'ascending': True},
 {'name': 'theory_conv_prem', 'weight': 5, 'ascending': True},
 {'name': 'conv_prem', 'weight': 2, 'ascending': True},
 {'name': 'rsi7', 'weight': 1, 'ascending': True},
 {'name': 'theory_bias', 'weight': 5, 'ascending': True},
 {'name': 'cap_mv_rate', 'weight': 1, 'ascending': True}]
 最优参数下的目标函数值： 0.24571252230424312


hold_num = 5 # 持有数量
threadhold_num = 4 # 轮动阈值
df.loc[df.list_days <= 3, 'filter'] = True # 排除新债
df.loc[df.left_years < 0.5, 'filter'] = True # 排除到期日小于1年的标的
df.loc[df.close > 145, 'filter'] = True  # 排除价格
df.loc[df.close < 100, 'filter'] = True  # 排除价格
[{'name': 'stoch_signal1', 'weight': 5, 'ascending': True},
 {'name': 'volatility_stk10', 'weight': 5, 'ascending': False},
 {'name': 'option_value', 'weight': 5, 'ascending': False}]
 最优参数下的目标函数值： 0.2768440860937331


hold_num = 5 # 持有数量
threadhold_num = 4 # 轮动阈值
df.loc[df.list_days <= 3, 'filter'] = True # 排除新债
df.loc[df.left_years < 0.5, 'filter'] = True # 排除到期日小于1年的标的
df.loc[df.close > 145, 'filter'] = True  # 排除价格
df.loc[df.close < 100, 'filter'] = True  # 排除价格
[{'name': 'volatility_stk10', 'weight': 4, 'ascending': False},
 {'name': 'dblow', 'weight': 1, 'ascending': True},
 {'name': 'momentum3', 'weight': 1, 'ascending': False},
 {'name': 'stoch1', 'weight': 5, 'ascending': True}]
 最优参数下的目标函数值： 0.37326586207280776


hold_num = 5 # 持有数量
threadhold_num = 4 # 轮动阈值
df.loc[df.list_days <= 3, 'filter'] = True # 排除新债
df.loc[df.left_years < 0.5, 'filter'] = True # 排除到期日小于1年的标的
df.loc[df.close > 145, 'filter'] = True  # 排除价格
df.loc[df.close < 100, 'filter'] = True  # 排除价格
[{'name': 'adx14', 'weight': 1, 'ascending': False},
 {'name': 'volatility_stk20', 'weight': 5, 'ascending': False},
 {'name': 'rsi5', 'weight': 2, 'ascending': True},
 {'name': 'ytm', 'weight': 2, 'ascending': True},
 {'name': 'rsi7', 'weight': 4, 'ascending': True}]
 最优参数下的目标函数值： 0.26128661757586236


hold_num = 5 # 持有数量
threadhold_num = 4 # 轮动阈值
df.loc[df.list_days <= 3, 'filter'] = True # 排除新债
df.loc[df.left_years < 0.5, 'filter'] = True # 排除到期日小于1年的标的
df.loc[df.close > 145, 'filter'] = True  # 排除价格
df.loc[df.close < 100, 'filter'] = True  # 排除价格
[{'name': 'stoch1', 'weight': 2, 'ascending': True},
 {'name': 'theory_bias', 'weight': 2, 'ascending': True},
 {'name': 'volatility_stk5', 'weight': 4, 'ascending': False},
 {'name': 'pvt', 'weight': 3, 'ascending': True},
 {'name': 'remain_cap', 'weight': 2, 'ascending': True},
 {'name': 'stoch2', 'weight': 1, 'ascending': True}]
 最优参数下的目标函数值： 0.32773750081977115








