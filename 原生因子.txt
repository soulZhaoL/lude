
hold_num = 5 # 持有数量
threadhold_num = 3 # 轮动阈值
不排除新债
df.loc[df.close > 150, 'filter'] = True  # 排除价格
df.loc[df.close < 100, 'filter'] = True  # 排除价格
df.loc[df.left_years < 0.5, 'filter'] = True # 排除到期日小于1年的标的
[{'name': 'theory_conv_prem', 'weight': 4, 'ascending': False},
{'name': 'dblow', 'weight': 4, 'ascending': True},
{'name': 'theory_value', 'weight': 3, 'ascending': False},
{'name': 'ps_ttm', 'weight': 2, 'ascending': False}]
最优参数下的目标函数值： 0.3410

---------------------------------------------------------------------------------------------------------------------------------------------------------------------
hold_num = 5 # 持有数量
threadhold_num = 1 # 轮动阈值
df.loc[df.list_days <= 3, 'filter'] = True # 排除新债
df.loc[df.left_years < 0.5, 'filter'] = True # 排除到期日小于1年的标的
df.loc[df.close > 150, 'filter'] = True  # 排除价格
df.loc[df.close < 100, 'filter'] = True  # 排除价格
[{'name': 'pre_close', 'weight': 5, 'ascending': True},
 {'name': 'remain_cap', 'weight': 3, 'ascending': True},
 {'name': 'pb', 'weight': 4, 'ascending': False},
 {'name': 'ytm', 'weight': 5, 'ascending': True},
 {'name': 'dblow', 'weight': 5, 'ascending': True},
 {'name': 'cap_mv_rate', 'weight': 1, 'ascending': True}]
最优参数下的目标函数值： 0.2202778762461104


hold_num = 5 # 持有数量
threadhold_num = 2 # 轮动阈值
df.loc[df.list_days <= 3, 'filter'] = True # 排除新债
df.loc[df.left_years < 0.5, 'filter'] = True # 排除到期日小于1年的标的
df.loc[df.close > 150, 'filter'] = True  # 排除价格
df.loc[df.close < 100, 'filter'] = True  # 排除价格
[{'name': 'dblow', 'weight': 5, 'ascending': True},
 {'name': 'conv_prem', 'weight': 4, 'ascending': True},
 {'name': 'pb', 'weight': 3, 'ascending': False},
 {'name': 'remain_cap', 'weight': 3, 'ascending': True},
 {'name': 'close', 'weight': 2, 'ascending': True},
 {'name': 'ps_ttm', 'weight': 1, 'ascending': False}]
 最优参数下的目标函数值： 0.2609932558165049


hold_num = 5 # 持有数量
threadhold_num = 2 # 轮动阈值
df.loc[df.list_days <= 3, 'filter'] = True # 排除新债
df.loc[df.left_years < 0.5, 'filter'] = True # 排除到期日小于1年的标的
df.loc[df.close > 150, 'filter'] = True  # 排除价格
df.loc[df.close < 100, 'filter'] = True  # 排除价格
[{'name': 'remain_cap', 'weight': 2, 'ascending': True},
{'name': 'dblow', 'weight': 5, 'ascending': True},
{'name': 'option_value', 'weight': 1, 'ascending': True},
{'name': 'ps_ttm', 'weight': 3, 'ascending': False}]
最优参数下的目标函数值： 0.21541284181597775


hold_num = 5 # 持有数量
threadhold_num = 3 # 轮动阈值
df.loc[df.left_years < 0.5, 'filter'] = True # 排除到期日小于1年的标的
df.loc[df.close > 150, 'filter'] = True  # 排除价格
df.loc[df.close < 100, 'filter'] = True  # 排除价格
[{'name': 'theory_bias', 'weight': 5, 'ascending': True},
{'name': 'volatility_stk10', 'weight': 3, 'ascending': False},
{'name': 'stoch_signal3', 'weight': 5, 'ascending': True},
{'name': 'theory_conv_prem', 'weight': 1, 'ascending': False}]
最优参数下的目标函数值： 0.20013858898428682


hold_num = 5 # 持有数量
threadhold_num = 3 # 轮动阈值
df.loc[df.left_years < 0.5, 'filter'] = True # 排除到期日小于1年的标的
df.loc[df.close > 150, 'filter'] = True  # 排除价格
df.loc[df.close < 100, 'filter'] = True  # 排除价格
[{'name': 'cap_mv_rate', 'weight': 1, 'ascending': False},
 {'name': 'bond_prem', 'weight': 1, 'ascending': True},
 {'name': 'dblow', 'weight': 1, 'ascending': True},
 {'name': 'turnover', 'weight': 1, 'ascending': False},
 {'name': 'ps_ttm', 'weight': 3, 'ascending': False},
 {'name': 'remain_size', 'weight': 5, 'ascending': True}]


hold_num = 5 # 持有数量
threadhold_num = 3 # 轮动阈值
df.loc[df.left_years < 0.5, 'filter'] = True # 排除到期日小于1年的标的
df.loc[df.close > 150, 'filter'] = True  # 排除价格
df.loc[df.close < 100, 'filter'] = True  # 排除价格
[{'name': 'pct_chg', 'weight': 1, 'ascending': True},
 {'name': 'turnover', 'weight': 4, 'ascending': False},
 {'name': 'dblow', 'weight': 2, 'ascending': True},
 {'name': 'theory_bias', 'weight': 1, 'ascending': False},
 {'name': 'ps_ttm', 'weight': 4, 'ascending': False}]
最优参数下的目标函数值： 0.24083600408498684



hold_num = 5 # 持有数量
threadhold_num = 4 # 轮动阈值
df.loc[df.left_years < 0.5, 'filter'] = True # 排除到期日小于1年的标的
df.loc[df.close > 150, 'filter'] = True  # 排除价格
df.loc[df.close < 100, 'filter'] = True  # 排除价格
[{'name': 'theory_value', 'weight': 2, 'ascending': False},
 {'name': 'close', 'weight': 3, 'ascending': True},
 {'name': 'theory_bias', 'weight': 5, 'ascending': True},
 {'name': 'ytm', 'weight': 5, 'ascending': True},
 {'name': 'option_value', 'weight': 1, 'ascending': True}]
最优参数下的目标函数值： 0.23462269252864432


hold_num = 5 # 持有数量
threadhold_num = 1 # 轮动阈值
df.loc[df.left_years < 0.5, 'filter'] = True # 排除到期日小于1年的标的
df.loc[df.close > 130, 'filter'] = True  # 排除价格
df.loc[df.close < 100, 'filter'] = True  # 排除价格
[{'name': 'mod_conv_prem', 'weight': 2, 'ascending': True},
 {'name': 'ps_ttm', 'weight': 3, 'ascending': False},
 {'name': 'turnover', 'weight': 4, 'ascending': False},
 {'name': 'theory_bias', 'weight': 2, 'ascending': True}]
 最优参数下的目标函数值： 0.23686144738606374



hold_num = 5 # 持有数量
threadhold_num = 1 # 轮动阈值
df.loc[df.list_days <= 3, 'filter'] = True # 排除新债
df.loc[df.left_years < 0.5, 'filter'] = True # 排除到期日小于1年的标的
df.loc[df.close > 135, 'filter'] = True  # 排除价格
df.loc[df.close < 100, 'filter'] = True  # 排除价格
[{'name': 'ps_ttm', 'weight': 4, 'ascending': False},
 {'name': 'pe_ttm', 'weight': 1, 'ascending': True},
 {'name': 'turnover', 'weight': 3, 'ascending': False},
 {'name': 'dblow', 'weight': 2, 'ascending': True}]
最优参数下的目标函数值： 0.2475859624957888


hold_num = 5 # 持有数量
threadhold_num = 1 # 轮动阈值
df.loc[df.list_days <= 3, 'filter'] = True # 排除新债
df.loc[df.left_years < 0.5, 'filter'] = True # 排除到期日小于1年的标的
df.loc[df.close > 135, 'filter'] = True  # 排除价格
df.loc[df.close < 100, 'filter'] = True  # 排除价格
[{'name': 'amount', 'weight': 5, 'ascending': False},
 {'name': 'theory_bias', 'weight': 1, 'ascending': True},
 {'name': 'dblow', 'weight': 2, 'ascending': True},
 {'name': 'bond_prem', 'weight': 1, 'ascending': False},
 {'name': 'ps_ttm', 'weight': 5, 'ascending': False}]
最优参数下的目标函数值： 0.22575091126113023


hold_num = 5 # 持有数量
threadhold_num = 1 # 轮动阈值
df.loc[df.list_days <= 3, 'filter'] = True # 排除新债
df.loc[df.left_years < 0.5, 'filter'] = True # 排除到期日小于1年的标的
df.loc[df.close > 140, 'filter'] = True  # 排除价格
df.loc[df.close < 100, 'filter'] = True  # 排除价格
[{'name': 'dblow', 'weight': 5, 'ascending': True},
 {'name': 'volatility_stk', 'weight': 4, 'ascending': False},
 {'name': 'remain_cap', 'weight': 5, 'ascending': True}]
最优参数下的目标函数值： 0.24494537251642856



hold_num = 5 # 持有数量
threadhold_num = 1 # 轮动阈值
df.loc[df.list_days <= 3, 'filter'] = True # 排除新债
df.loc[df.left_years < 0.5, 'filter'] = True # 排除到期日小于1年的标的
df.loc[df.close > 140, 'filter'] = True  # 排除价格
df.loc[df.close < 100, 'filter'] = True  # 排除价格
[{'name': 'bond_prem', 'weight': 1, 'ascending': True},
 {'name': 'ps_ttm', 'weight': 5, 'ascending': False},
 {'name': 'turnover', 'weight': 4, 'ascending': False},
 {'name': 'dblow', 'weight': 5, 'ascending': True}]
最优参数下的目标函数值： 0.27705522231316615


hold_num = 5 # 持有数量
threadhold_num = 1 # 轮动阈值
df.loc[df.list_days <= 3, 'filter'] = True # 排除新债
df.loc[df.left_years < 0.5, 'filter'] = True # 排除到期日小于1年的标的
df.loc[df.close > 140, 'filter'] = True  # 排除价格
df.loc[df.close < 100, 'filter'] = True  # 排除价格
[{'name': 'turnover', 'weight': 5, 'ascending': False},
 {'name': 'option_value', 'weight': 1, 'ascending': True},
 {'name': 'mod_conv_prem', 'weight': 2, 'ascending': True},
 {'name': 'conv_prem', 'weight': 2, 'ascending': True},
 {'name': 'ps_ttm', 'weight': 5, 'ascending': False}]
最优参数下的目标函数值： 0.35513345820225783

hold_num = 5 # 持有数量
threadhold_num = 1 # 轮动阈值
df.loc[df.list_days <= 3, 'filter'] = True # 排除新债
df.loc[df.left_years < 0.5, 'filter'] = True # 排除到期日小于1年的标的
df.loc[df.close > 130, 'filter'] = True  # 排除价格
df.loc[df.close < 100, 'filter'] = True  # 排除价格
[{'name': 'theory_bias', 'weight': 3, 'ascending': True},
 {'name': 'volatility_stk', 'weight': 4, 'ascending': False},
 {'name': 'amount', 'weight': 4, 'ascending': False},
 {'name': 'mod_conv_prem', 'weight': 5, 'ascending': True},
 {'name': 'vol', 'weight': 2, 'ascending': False},
 {'name': 'remain_size', 'weight': 5, 'ascending': True}]
最优参数下的目标函数值： 0.20415334815646013


hold_num = 5 # 持有数量
threadhold_num = 1 # 轮动阈值
df.loc[df.list_days <= 3, 'filter'] = True # 排除新债
df.loc[df.left_years < 0.5, 'filter'] = True # 排除到期日小于1年的标的
df.loc[df.close > 135, 'filter'] = True  # 排除价格
df.loc[df.close < 100, 'filter'] = True  # 排除价格
[{'name': 'pre_close', 'weight': 2, 'ascending': False},
 {'name': 'dblow', 'weight': 1, 'ascending': False},
 {'name': 'remain_cap', 'weight': 1, 'ascending': True},
 {'name': 'volatility_stk', 'weight': 4, 'ascending': False},
 {'name': 'mod_conv_prem', 'weight': 3, 'ascending': True},
 {'name': 'theory_conv_prem', 'weight': 5, 'ascending': True}]
最优参数下的目标函数值： 0.2449724784352545


hold_num = 5 # 持有数量
threadhold_num = 1 # 轮动阈值
df.loc[df.list_days <= 3, 'filter'] = True # 排除新债
df.loc[df.left_years < 0.5, 'filter'] = True # 排除到期日小于1年的标的
df.loc[df.close > 140, 'filter'] = True  # 排除价格
df.loc[df.close < 100, 'filter'] = True  # 排除价格
[{'name': 'ps_ttm', 'weight': 5, 'ascending': False},
 {'name': 'remain_cap', 'weight': 4, 'ascending': True},
 {'name': 'amount', 'weight': 2, 'ascending': True},
 {'name': 'pure_value', 'weight': 2, 'ascending': False},
 {'name': 'mod_conv_prem', 'weight': 3, 'ascending': True},
 {'name': 'amount', 'weight': 4, 'ascending': False}]
最优参数下的目标函数值： 0.28565827177049985


hold_num = 5 # 持有数量
threadhold_num = 1 # 轮动阈值
df.loc[df.list_days <= 3, 'filter'] = True # 排除新债
df.loc[df.left_years < 0.5, 'filter'] = True # 排除到期日小于1年的标的
df.loc[df.close > 145, 'filter'] = True  # 排除价格
df.loc[df.close < 100, 'filter'] = True  # 排除价格
[{'name': 'remain_size', 'weight': 5, 'ascending': True},
 {'name': 'pb', 'weight': 5, 'ascending': False},
 {'name': 'cap_mv_rate', 'weight': 2, 'ascending': False},
 {'name': 'dblow', 'weight': 4, 'ascending': True}]
最优参数下的目标函数值： 0.22627020432231348

hold_num = 5 # 持有数量
threadhold_num = 1 # 轮动阈值
df.loc[df.list_days <= 3, 'filter'] = True # 排除新债
df.loc[df.left_years < 0.5, 'filter'] = True # 排除到期日小于1年的标的
df.loc[df.close > 145, 'filter'] = True  # 排除价格
df.loc[df.close < 100, 'filter'] = True  # 排除价格
[{'name': 'remain_size', 'weight': 4, 'ascending': True},
 {'name': 'conv_prem', 'weight': 4, 'ascending': True},
 {'name': 'option_value', 'weight': 5, 'ascending': True},
 {'name': 'theory_value', 'weight': 2, 'ascending': False},
 {'name': 'pb', 'weight': 5, 'ascending': False}]
最优参数下的目标函数值： 0.24296023841989434


hold_num = 5 # 持有数量
threadhold_num = 1 # 轮动阈值
df.loc[df.list_days <= 3, 'filter'] = True # 排除新债
df.loc[df.left_years < 0.5, 'filter'] = True # 排除到期日小于1年的标的
df.loc[df.close > 145, 'filter'] = True  # 排除价格
df.loc[df.close < 100, 'filter'] = True  # 排除价格
[{'name': 'remain_cap', 'weight': 2, 'ascending': True},
 {'name': 'theory_conv_prem', 'weight': 2, 'ascending': True},
 {'name': 'turnover', 'weight': 3, 'ascending': False},
 {'name': 'dblow', 'weight': 4, 'ascending': True},
 {'name': 'ps_ttm', 'weight': 4, 'ascending': False},
 {'name': 'pb', 'weight': 2, 'ascending': False}]
最优参数下的目标函数值： 0.2422584361239588


hold_num = 5 # 持有数量
threadhold_num = 2 # 轮动阈值
df.loc[df.list_days <= 3, 'filter'] = True # 排除新债
df.loc[df.left_years < 0.5, 'filter'] = True # 排除到期日小于1年的标的
df.loc[df.close > 130, 'filter'] = True  # 排除价格
df.loc[df.close < 100, 'filter'] = True  # 排除价格
[{'name': 'option_value', 'weight': 1, 'ascending': True},
 {'name': 'turnover', 'weight': 3, 'ascending': False},
 {'name': 'ps_ttm', 'weight': 3, 'ascending': False},
 {'name': 'conv_prem', 'weight': 5, 'ascending': True}]
最优参数下的目标函数值： 0.23561724570551812


hold_num = 5 # 持有数量
threadhold_num = 2 # 轮动阈值
df.loc[df.list_days <= 3, 'filter'] = True # 排除新债
df.loc[df.left_years < 0.5, 'filter'] = True # 排除到期日小于1年的标的
df.loc[df.close > 130, 'filter'] = True  # 排除价格
df.loc[df.close < 100, 'filter'] = True  # 排除价格
[{'name': 'open', 'weight': 1, 'ascending': True},
 {'name': 'mod_conv_prem', 'weight': 2, 'ascending': True},
 {'name': 'ps_ttm', 'weight': 3, 'ascending': False},
 {'name': 'remain_size', 'weight': 5, 'ascending': True},
 {'name': 'theory_bias', 'weight': 3, 'ascending': True}]
最优参数下的目标函数值： 0.2320471764427814


hold_num = 5 # 持有数量
threadhold_num = 2 # 轮动阈值
df.loc[df.list_days <= 3, 'filter'] = True # 排除新债
df.loc[df.left_years < 0.5, 'filter'] = True # 排除到期日小于1年的标的
df.loc[df.close > 130, 'filter'] = True  # 排除价格
df.loc[df.close < 100, 'filter'] = True  # 排除价格
[{'name': 'mod_conv_prem', 'weight': 3, 'ascending': True},
 {'name': 'pe_ttm', 'weight': 1, 'ascending': True},
 {'name': 'amount', 'weight': 5, 'ascending': False},
 {'name': 'pure_value', 'weight': 3, 'ascending': True},
 {'name': 'ps_ttm', 'weight': 5, 'ascending': False},
 {'name': 'turnover', 'weight': 3, 'ascending': False}]
最优参数下的目标函数值： 0.2418023750929268

hold_num = 5 # 持有数量
threadhold_num = 2 # 轮动阈值
df.loc[df.list_days <= 3, 'filter'] = True # 排除新债
df.loc[df.left_years < 0.5, 'filter'] = True # 排除到期日小于1年的标的
df.loc[df.close > 135, 'filter'] = True  # 排除价格
df.loc[df.close < 100, 'filter'] = True  # 排除价格
[{'name': 'high', 'weight': 5, 'ascending': False},
 {'name': 'conv_prem', 'weight': 4, 'ascending': True},
 {'name': 'dblow', 'weight': 1, 'ascending': True},
 {'name': 'volatility_stk', 'weight': 3, 'ascending': False},
 {'name': 'theory_value', 'weight': 2, 'ascending': False}]
最优参数下的目标函数值： 0.23651847501428902


hold_num = 5 # 持有数量
threadhold_num = 2 # 轮动阈值
df.loc[df.list_days <= 3, 'filter'] = True # 排除新债
df.loc[df.left_years < 0.5, 'filter'] = True # 排除到期日小于1年的标的
df.loc[df.close > 135, 'filter'] = True  # 排除价格
df.loc[df.close < 100, 'filter'] = True  # 排除价格
[{'name': 'conv_prem', 'weight': 1, 'ascending': True},
 {'name': 'amount', 'weight': 5, 'ascending': False},
 {'name': 'pb', 'weight': 2, 'ascending': False},
 {'name': 'option_value', 'weight': 2, 'ascending': True},
 {'name': 'ps_ttm', 'weight': 3, 'ascending': False},
 {'name': 'dblow', 'weight': 2, 'ascending': True}]
最优参数下的目标函数值： 0.23149070883616263



hold_num = 5 # 持有数量
threadhold_num = 2 # 轮动阈值
df.loc[df.list_days <= 3, 'filter'] = True # 排除新债
df.loc[df.left_years < 0.5, 'filter'] = True # 排除到期日小于1年的标的
df.loc[df.close > 140, 'filter'] = True  # 排除价格
df.loc[df.close < 100, 'filter'] = True  # 排除价格
[{'name': 'ps_ttm', 'weight': 4, 'ascending': False},
 {'name': 'theory_conv_prem', 'weight': 5, 'ascending': True},
 {'name': 'bond_prem', 'weight': 2, 'ascending': True},
 {'name': 'vol', 'weight': 3, 'ascending': False}]
最优参数下的目标函数值： 0.2914939240657066


hold_num = 5 # 持有数量
threadhold_num = 2 # 轮动阈值
df.loc[df.list_days <= 3, 'filter'] = True # 排除新债
df.loc[df.left_years < 0.5, 'filter'] = True # 排除到期日小于1年的标的
df.loc[df.close > 140, 'filter'] = True  # 排除价格
df.loc[df.close < 100, 'filter'] = True  # 排除价格
[{'name': 'turnover', 'weight': 3, 'ascending': False},
 {'name': 'amount', 'weight': 1, 'ascending': False},
 {'name': 'high', 'weight': 1, 'ascending': True},
 {'name': 'ps_ttm', 'weight': 3, 'ascending': False},
 {'name': 'dblow', 'weight': 2, 'ascending': True}]
 最优参数下的目标函数值： 0.3056369961077281


hold_num = 5 # 持有数量
threadhold_num = 2 # 轮动阈值
df.loc[df.list_days <= 3, 'filter'] = True # 排除新债
df.loc[df.left_years < 0.5, 'filter'] = True # 排除到期日小于1年的标的
df.loc[df.close > 140, 'filter'] = True  # 排除价格
df.loc[df.close < 100, 'filter'] = True  # 排除价格
[{'name': 'theory_bias', 'weight': 4, 'ascending': True},
 {'name': 'turnover', 'weight': 3, 'ascending': False},
 {'name': 'close', 'weight': 2, 'ascending': True},
 {'name': 'pe_ttm', 'weight': 1, 'ascending': True},
 {'name': 'ps_ttm', 'weight': 4, 'ascending': False},
 {'name': 'conv_prem', 'weight': 3, 'ascending': True}]
 最优参数下的目标函数值： 0.30848593565322835


hold_num = 5 # 持有数量
threadhold_num = 2 # 轮动阈值
df.loc[df.list_days <= 3, 'filter'] = True # 排除新债
df.loc[df.left_years < 0.5, 'filter'] = True # 排除到期日小于1年的标的
df.loc[df.close > 145, 'filter'] = True  # 排除价格
df.loc[df.close < 100, 'filter'] = True  # 排除价格
[{'name': 'bond_prem', 'weight': 1, 'ascending': True},
 {'name': 'remain_cap', 'weight': 5, 'ascending': True},
 {'name': 'option_value', 'weight': 2, 'ascending': False}]
最优参数下的目标函数值： 0.22814962352186474


hold_num = 5 # 持有数量
threadhold_num = 2 # 轮动阈值
df.loc[df.list_days <= 3, 'filter'] = True # 排除新债
df.loc[df.left_years < 0.5, 'filter'] = True # 排除到期日小于1年的标的
df.loc[df.close > 145, 'filter'] = True  # 排除价格
df.loc[df.close < 100, 'filter'] = True  # 排除价格
[{'name': 'turnover', 'weight': 4, 'ascending': False},
 {'name': 'high', 'weight': 1, 'ascending': False},
 {'name': 'cap_mv_rate', 'weight': 2, 'ascending': True},
 {'name': 'bond_prem', 'weight': 3, 'ascending': True},
 {'name': 'option_value', 'weight': 2, 'ascending': False}]
最优参数下的目标函数值： 0.2145142367845836


hold_num = 5 # 持有数量
threadhold_num = 2 # 轮动阈值
df.loc[df.list_days <= 3, 'filter'] = True # 排除新债
df.loc[df.left_years < 0.5, 'filter'] = True # 排除到期日小于1年的标的
df.loc[df.close > 145, 'filter'] = True  # 排除价格
df.loc[df.close < 100, 'filter'] = True  # 排除价格
[{'name': 'remain_cap', 'weight': 1, 'ascending': True},
 {'name': 'pb', 'weight': 2, 'ascending': False},
 {'name': 'mod_conv_prem', 'weight': 1, 'ascending': False},
 {'name': 'ytm', 'weight': 1, 'ascending': True},
 {'name': 'ps_ttm', 'weight': 1, 'ascending': False},
 {'name': 'dblow', 'weight': 5, 'ascending': True}]
最优参数下的目标函数值： 0.2439324663692306


hold_num = 5 # 持有数量
threadhold_num = 3 # 轮动阈值
df.loc[df.list_days <= 3, 'filter'] = True # 排除新债
df.loc[df.left_years < 0.5, 'filter'] = True # 排除到期日小于1年的标的
df.loc[df.close > 130, 'filter'] = True  # 排除价格
df.loc[df.close < 100, 'filter'] = True  # 排除价格
[{'name': 'mod_conv_prem', 'weight': 1, 'ascending': True},
 {'name': 'ps_ttm', 'weight': 1, 'ascending': False},
 {'name': 'turnover', 'weight': 5, 'ascending': False},
 {'name': 'pe_ttm', 'weight': 1, 'ascending': True}]
最优参数下的目标函数值： 0.2488299437789483


hold_num = 5 # 持有数量
threadhold_num = 3 # 轮动阈值
df.loc[df.list_days <= 3, 'filter'] = True # 排除新债
df.loc[df.left_years < 0.5, 'filter'] = True # 排除到期日小于1年的标的
df.loc[df.close > 130, 'filter'] = True  # 排除价格
df.loc[df.close < 100, 'filter'] = True  # 排除价格
[{'name': 'amount', 'weight': 4, 'ascending': False},
 {'name': 'mod_conv_prem', 'weight': 5, 'ascending': True},
 {'name': 'theory_bias', 'weight': 3, 'ascending': True},
 {'name': 'turnover', 'weight': 5, 'ascending': False},
 {'name': 'ps_ttm', 'weight': 4, 'ascending': False}]
 最优参数下的目标函数值： 0.21181241120852978


hold_num = 5 # 持有数量
threadhold_num = 3 # 轮动阈值
df.loc[df.list_days <= 3, 'filter'] = True # 排除新债
df.loc[df.left_years < 0.5, 'filter'] = True # 排除到期日小于1年的标的
df.loc[df.close > 130, 'filter'] = True  # 排除价格
df.loc[df.close < 100, 'filter'] = True  # 排除价格
[{'name': 'remain_cap', 'weight': 2, 'ascending': True},
 {'name': 'amount', 'weight': 1, 'ascending': False},
 {'name': 'ps_ttm', 'weight': 5, 'ascending': False},
 {'name': 'mod_conv_prem', 'weight': 2, 'ascending': True},
 {'name': 'amount', 'weight': 5, 'ascending': False},
 {'name': 'theory_bias', 'weight': 3, 'ascending': True}]
最优参数下的目标函数值： 0.2335598132733292


hold_num = 5 # 持有数量
threadhold_num = 3 # 轮动阈值
df.loc[df.list_days <= 3, 'filter'] = True # 排除新债
df.loc[df.left_years < 0.5, 'filter'] = True # 排除到期日小于1年的标的
df.loc[df.close > 135, 'filter'] = True  # 排除价格
df.loc[df.close < 100, 'filter'] = True  # 排除价格
[{'name': 'amount', 'weight': 5, 'ascending': False},
 {'name': 'theory_conv_prem', 'weight': 3, 'ascending': True},
 {'name': 'ps_ttm', 'weight': 5, 'ascending': False}]
最优参数下的目标函数值： 0.2691953582323692


hold_num = 5 # 持有数量
threadhold_num = 3 # 轮动阈值
df.loc[df.list_days <= 3, 'filter'] = True # 排除新债
df.loc[df.left_years < 0.5, 'filter'] = True # 排除到期日小于1年的标的
df.loc[df.close > 135, 'filter'] = True  # 排除价格
df.loc[df.close < 100, 'filter'] = True  # 排除价格
[{'name': 'vol', 'weight': 5, 'ascending': False},
 {'name': 'conv_prem', 'weight': 3, 'ascending': True},
 {'name': 'volatility_stk', 'weight': 3, 'ascending': False},
 {'name': 'bond_prem', 'weight': 4, 'ascending': True},
 {'name': 'ps_ttm', 'weight': 3, 'ascending': False},
 {'name': 'mod_conv_prem', 'weight': 2, 'ascending': True}]
最优参数下的目标函数值： 0.23109765307057262


hold_num = 5 # 持有数量
threadhold_num = 3 # 轮动阈值
df.loc[df.list_days <= 3, 'filter'] = True # 排除新债
df.loc[df.left_years < 0.5, 'filter'] = True # 排除到期日小于1年的标的
df.loc[df.close > 140, 'filter'] = True  # 排除价格
df.loc[df.close < 100, 'filter'] = True  # 排除价格
[{'name': 'dblow', 'weight': 5, 'ascending': True},
 {'name': 'ps_ttm', 'weight': 5, 'ascending': False},
 {'name': 'turnover', 'weight': 3, 'ascending': False},
 {'name': 'close', 'weight': 5, 'ascending': False}]
最优参数下的目标函数值： 0.27586390137090055


hold_num = 5 # 持有数量
threadhold_num = 3 # 轮动阈值
df.loc[df.list_days <= 3, 'filter'] = True # 排除新债
df.loc[df.left_years < 0.5, 'filter'] = True # 排除到期日小于1年的标的
df.loc[df.close > 140, 'filter'] = True  # 排除价格
df.loc[df.close < 100, 'filter'] = True  # 排除价格
[{'name': 'pure_value', 'weight': 2, 'ascending': False},
 {'name': 'dblow', 'weight': 2, 'ascending': True},
 {'name': 'ytm', 'weight': 2, 'ascending': False},
 {'name': 'turnover', 'weight': 4, 'ascending': False},
 {'name': 'ps_ttm', 'weight': 5, 'ascending': False}]
最优参数下的目标函数值： 0.3355186133406165


hold_num = 5 # 持有数量
threadhold_num = 3 # 轮动阈值
df.loc[df.list_days <= 3, 'filter'] = True # 排除新债
df.loc[df.left_years < 0.5, 'filter'] = True # 排除到期日小于1年的标的
df.loc[df.close > 140, 'filter'] = True  # 排除价格
df.loc[df.close < 100, 'filter'] = True  # 排除价格
[{'name': 'pure_value', 'weight': 1, 'ascending': False},
 {'name': 'conv_prem', 'weight': 3, 'ascending': True},
 {'name': 'ps_ttm', 'weight': 4, 'ascending': False},
 {'name': 'dblow', 'weight': 1, 'ascending': True},
 {'name': 'option_value', 'weight': 1, 'ascending': False},
 {'name': 'turnover', 'weight': 2, 'ascending': False}]
最优参数下的目标函数值： 0.3000602459562436


hold_num = 5 # 持有数量
threadhold_num = 3 # 轮动阈值
df.loc[df.list_days <= 3, 'filter'] = True # 排除新债
df.loc[df.left_years < 0.5, 'filter'] = True # 排除到期日小于1年的标的
df.loc[df.close > 145, 'filter'] = True  # 排除价格
df.loc[df.close < 100, 'filter'] = True  # 排除价格
[{'name': 'remain_cap', 'weight': 1, 'ascending': True},
 {'name': 'dblow', 'weight': 2, 'ascending': True},
 {'name': 'pb', 'weight': 1, 'ascending': False}]
最优参数下的目标函数值： 0.25444718793590426


hold_num = 5 # 持有数量
threadhold_num = 3 # 轮动阈值
df.loc[df.list_days <= 3, 'filter'] = True # 排除新债
df.loc[df.left_years < 0.5, 'filter'] = True # 排除到期日小于1年的标的
df.loc[df.close > 145, 'filter'] = True  # 排除价格
df.loc[df.close < 100, 'filter'] = True  # 排除价格
[{'name': 'volatility_stk', 'weight': 2, 'ascending': False},
 {'name': 'cap_mv_rate', 'weight': 2, 'ascending': True},
 {'name': 'amount', 'weight': 1, 'ascending': False},
 {'name': 'conv_prem', 'weight': 3, 'ascending': True}]
最优参数下的目标函数值： 0.27540519432259725


hold_num = 5 # 持有数量
threadhold_num = 3 # 轮动阈值
df.loc[df.list_days <= 3, 'filter'] = True # 排除新债
df.loc[df.left_years < 0.5, 'filter'] = True # 排除到期日小于1年的标的
df.loc[df.close > 145, 'filter'] = True  # 排除价格
df.loc[df.close < 100, 'filter'] = True  # 排除价格
[{'name': 'ps_ttm', 'weight': 1, 'ascending': True},
 {'name': 'option_value', 'weight': 1, 'ascending': False},
 {'name': 'cap_mv_rate', 'weight': 4, 'ascending': True},
 {'name': 'theory_bias', 'weight': 1, 'ascending': True},
 {'name': 'turnover', 'weight': 4, 'ascending': False}]
最优参数下的目标函数值： 0.3212599573489019


hold_num = 5 # 持有数量
threadhold_num = 3 # 轮动阈值
df.loc[df.list_days <= 3, 'filter'] = True # 排除新债
df.loc[df.left_years < 0.5, 'filter'] = True # 排除到期日小于1年的标的
df.loc[df.close > 145, 'filter'] = True  # 排除价格
df.loc[df.close < 100, 'filter'] = True  # 排除价格
[{'name': 'remain_cap', 'weight': 4, 'ascending': True},
 {'name': 'theory_conv_prem', 'weight': 4, 'ascending': True},
 {'name': 'pb', 'weight': 4, 'ascending': False},
 {'name': 'bond_prem', 'weight': 3, 'ascending': True},
 {'name': 'high', 'weight': 1, 'ascending': False},
 {'name': 'cap_mv_rate', 'weight': 1, 'ascending': True}]
 最优参数下的目标函数值： 0.2897078965452524


hold_num = 5 # 持有数量
threadhold_num = 4 # 轮动阈值
df.loc[df.list_days <= 3, 'filter'] = True # 排除新债
df.loc[df.left_years < 0.5, 'filter'] = True # 排除到期日小于1年的标的
df.loc[df.close > 130, 'filter'] = True  # 排除价格
df.loc[df.close < 100, 'filter'] = True  # 排除价格
[{'name': 'mod_conv_prem', 'weight': 3, 'ascending': True},
 {'name': 'turnover', 'weight': 4, 'ascending': False},
 {'name': 'theory_bias', 'weight': 5, 'ascending': True},
 {'name': 'volatility_stk', 'weight': 3, 'ascending': False},
 {'name': 'ps_ttm', 'weight': 3, 'ascending': False}]
最优参数下的目标函数值： 0.2463778110745629


hold_num = 5 # 持有数量
threadhold_num = 4 # 轮动阈值
df.loc[df.list_days <= 3, 'filter'] = True # 排除新债
df.loc[df.left_years < 0.5, 'filter'] = True # 排除到期日小于1年的标的
df.loc[df.close > 130, 'filter'] = True  # 排除价格
df.loc[df.close < 100, 'filter'] = True  # 排除价格
[{'name': 'remain_size', 'weight': 4, 'ascending': True},
 {'name': 'ps_ttm', 'weight': 4, 'ascending': False},
 {'name': 'volatility_stk', 'weight': 2, 'ascending': True},
 {'name': 'theory_bias', 'weight': 3, 'ascending': True},
 {'name': 'mod_conv_prem', 'weight': 3, 'ascending': True},
 {'name': 'amount', 'weight': 2, 'ascending': False}]
最优参数下的目标函数值： 0.24796311301791119


hold_num = 5 # 持有数量
threadhold_num = 4 # 轮动阈值
df.loc[df.list_days <= 3, 'filter'] = True # 排除新债
df.loc[df.left_years < 0.5, 'filter'] = True # 排除到期日小于1年的标的
df.loc[df.close > 135, 'filter'] = True  # 排除价格
df.loc[df.close < 100, 'filter'] = True  # 排除价格
[{'name': 'volatility_stk', 'weight': 4, 'ascending': False},
 {'name': 'mod_conv_prem', 'weight': 3, 'ascending': True},
 {'name': 'cap_mv_rate', 'weight': 1, 'ascending': True},
 {'name': 'theory_value', 'weight': 1, 'ascending': False},
 {'name': 'pb', 'weight': 2, 'ascending': False}]
最优参数下的目标函数值： 0.24256474861216248


hold_num = 5 # 持有数量
threadhold_num = 4 # 轮动阈值
df.loc[df.list_days <= 3, 'filter'] = True # 排除新债
df.loc[df.left_years < 0.5, 'filter'] = True # 排除到期日小于1年的标的
df.loc[df.close > 135, 'filter'] = True  # 排除价格
df.loc[df.close < 100, 'filter'] = True  # 排除价格
[{'name': 'theory_conv_prem', 'weight': 1, 'ascending': True},
 {'name': 'ytm', 'weight': 3, 'ascending': True},
 {'name': 'turnover', 'weight': 5, 'ascending': False},
 {'name': 'volatility_stk', 'weight': 2, 'ascending': False},
 {'name': 'remain_cap', 'weight': 3, 'ascending': True},
 {'name': 'conv_prem', 'weight': 3, 'ascending': True}]
最优参数下的目标函数值： 0.22613304694996406



hold_num = 5 # 持有数量
threadhold_num = 4 # 轮动阈值
df.loc[df.list_days <= 3, 'filter'] = True # 排除新债
df.loc[df.left_years < 0.5, 'filter'] = True # 排除到期日小于1年的标的
df.loc[df.close > 140, 'filter'] = True  # 排除价格
df.loc[df.close < 100, 'filter'] = True  # 排除价格
[{'name': 'turnover', 'weight': 2, 'ascending': False},
 {'name': 'ps_ttm', 'weight': 5, 'ascending': False},
 {'name': 'conv_prem', 'weight': 2, 'ascending': True}]
 最优参数下的目标函数值： 0.2214585198210246


hold_num = 5 # 持有数量
threadhold_num = 4 # 轮动阈值
df.loc[df.list_days <= 3, 'filter'] = True # 排除新债
df.loc[df.left_years < 0.5, 'filter'] = True # 排除到期日小于1年的标的
df.loc[df.close > 140, 'filter'] = True  # 排除价格
df.loc[df.close < 100, 'filter'] = True  # 排除价格
[{'name': 'remain_size', 'weight': 4, 'ascending': True},
 {'name': 'ps_ttm', 'weight': 5, 'ascending': False},
 {'name': 'mod_conv_prem', 'weight': 3, 'ascending': True},
 {'name': 'theory_value', 'weight': 1, 'ascending': False}]
 最优参数下的目标函数值： 0.22059784234285984


hold_num = 5 # 持有数量
threadhold_num = 4 # 轮动阈值
df.loc[df.list_days <= 3, 'filter'] = True # 排除新债
df.loc[df.left_years < 0.5, 'filter'] = True # 排除到期日小于1年的标的
df.loc[df.close > 140, 'filter'] = True  # 排除价格
df.loc[df.close < 100, 'filter'] = True  # 排除价格
[{'name': 'vol', 'weight': 2, 'ascending': False},
 {'name': 'turnover', 'weight': 5, 'ascending': False},
 {'name': 'ps_ttm', 'weight': 5, 'ascending': False},
 {'name': 'high', 'weight': 2, 'ascending': True},
 {'name': 'conv_prem', 'weight': 3, 'ascending': True}]
 最优参数下的目标函数值： 0.32793475327000965


hold_num = 5 # 持有数量
threadhold_num = 4 # 轮动阈值
df.loc[df.list_days <= 3, 'filter'] = True # 排除新债
df.loc[df.left_years < 0.5, 'filter'] = True # 排除到期日小于1年的标的
df.loc[df.close > 140, 'filter'] = True  # 排除价格
df.loc[df.close < 100, 'filter'] = True  # 排除价格
[{'name': 'bond_prem', 'weight': 2, 'ascending': False},
 {'name': 'ps_ttm', 'weight': 5, 'ascending': False},
 {'name': 'close', 'weight': 1, 'ascending': True},
 {'name': 'mod_conv_prem', 'weight': 2, 'ascending': True},
 {'name': 'amount', 'weight': 3, 'ascending': False},
 {'name': 'pure_value', 'weight': 1, 'ascending': False}]
 最优参数下的目标函数值： 0.2520242225563891


hold_num = 5 # 持有数量
threadhold_num = 4 # 轮动阈值
df.loc[df.list_days <= 3, 'filter'] = True # 排除新债
df.loc[df.left_years < 0.5, 'filter'] = True # 排除到期日小于1年的标的
df.loc[df.close > 145, 'filter'] = True  # 排除价格
df.loc[df.close < 100, 'filter'] = True  # 排除价格
[{'name': 'dblow', 'weight': 3, 'ascending': True},
 {'name': 'pb', 'weight': 2, 'ascending': False},
 {'name': 'remain_cap', 'weight': 1, 'ascending': True}]
最优参数下的目标函数值： 0.24134187084720415


hold_num = 5 # 持有数量
threadhold_num = 4 # 轮动阈值
df.loc[df.list_days <= 3, 'filter'] = True # 排除新债
df.loc[df.left_years < 0.5, 'filter'] = True # 排除到期日小于1年的标的
df.loc[df.close > 145, 'filter'] = True  # 排除价格
df.loc[df.close < 100, 'filter'] = True  # 排除价格
[{'name': 'turnover', 'weight': 1, 'ascending': False},
 {'name': 'pb', 'weight': 1, 'ascending': False},
 {'name': 'pure_value', 'weight': 2, 'ascending': False},
 {'name': 'remain_cap', 'weight': 5, 'ascending': True}]
最优参数下的目标函数值： 0.2455342432018186


hold_num = 5 # 持有数量
threadhold_num = 4 # 轮动阈值
df.loc[df.list_days <= 3, 'filter'] = True # 排除新债
df.loc[df.left_years < 0.5, 'filter'] = True # 排除到期日小于1年的标的
df.loc[df.close > 145, 'filter'] = True  # 排除价格
df.loc[df.close < 100, 'filter'] = True  # 排除价格
[{'name': 'amount', 'weight': 3, 'ascending': False},
 {'name': 'ps_ttm', 'weight': 1, 'ascending': True},
 {'name': 'dblow', 'weight': 5, 'ascending': True},
 {'name': 'turnover', 'weight': 5, 'ascending': False},
 {'name': 'cap_mv_rate', 'weight': 5, 'ascending': True}]
最优参数下的目标函数值： 0.27731556393079715


hold_num = 5 # 持有数量
threadhold_num = 4 # 轮动阈值
df.loc[df.list_days <= 3, 'filter'] = True # 排除新债
df.loc[df.left_years < 0.5, 'filter'] = True # 排除到期日小于1年的标的
df.loc[df.close > 145, 'filter'] = True  # 排除价格
df.loc[df.close < 100, 'filter'] = True  # 排除价格
[{'name': 'pure_value', 'weight': 1, 'ascending': False},
 {'name': 'pb', 'weight': 4, 'ascending': False},
 {'name': 'open', 'weight': 2, 'ascending': True},
 {'name': 'turnover', 'weight': 4, 'ascending': False},
 {'name': 'volatility_stk', 'weight': 2, 'ascending': False},
 {'name': 'conv_prem', 'weight': 5, 'ascending': True}]
最优参数下的目标函数值： 0.23344922250967737


hold_num = 5 # 持有数量
threadhold_num = 5 # 轮动阈值
df.loc[df.list_days <= 3, 'filter'] = True # 排除新债
df.loc[df.left_years < 0.5, 'filter'] = True # 排除到期日小于1年的标的
df.loc[df.close > 130, 'filter'] = True  # 排除价格
df.loc[df.close < 100, 'filter'] = True  # 排除价格
[{'name': 'ps_ttm', 'weight': 3, 'ascending': False},
 {'name': 'dblow', 'weight': 4, 'ascending': True},
 {'name': 'turnover', 'weight': 4, 'ascending': False}]
 最优参数下的目标函数值： 0.2149053586543328


hold_num = 5 # 持有数量
threadhold_num = 5 # 轮动阈值
df.loc[df.list_days <= 3, 'filter'] = True # 排除新债
df.loc[df.left_years < 0.5, 'filter'] = True # 排除到期日小于1年的标的
df.loc[df.close > 130, 'filter'] = True  # 排除价格
df.loc[df.close < 100, 'filter'] = True  # 排除价格
[{'name': 'theory_bias', 'weight': 1, 'ascending': True},
 {'name': 'mod_conv_prem', 'weight': 1, 'ascending': True},
 {'name': 'remain_size', 'weight': 1, 'ascending': True},
 {'name': 'amount', 'weight': 3, 'ascending': False},
 {'name': 'ps_ttm', 'weight': 1, 'ascending': False}]
 最优参数下的目标函数值： 0.260403094086058


hold_num = 5 # 持有数量
threadhold_num = 5 # 轮动阈值
df.loc[df.list_days <= 3, 'filter'] = True # 排除新债
df.loc[df.left_years < 0.5, 'filter'] = True # 排除到期日小于1年的标的
df.loc[df.close > 135, 'filter'] = True  # 排除价格
df.loc[df.close < 100, 'filter'] = True  # 排除价格
[{'name': 'turnover', 'weight': 3, 'ascending': False},
 {'name': 'ps_ttm', 'weight': 3, 'ascending': False},
 {'name': 'conv_prem', 'weight': 5, 'ascending': True},
 {'name': 'dblow', 'weight': 1, 'ascending': True}]
 最优参数下的目标函数值： 0.22311544493290514


hold_num = 5 # 持有数量
threadhold_num = 5 # 轮动阈值
df.loc[df.list_days <= 3, 'filter'] = True # 排除新债
df.loc[df.left_years < 0.5, 'filter'] = True # 排除到期日小于1年的标的
df.loc[df.close > 135, 'filter'] = True  # 排除价格
df.loc[df.close < 100, 'filter'] = True  # 排除价格
[{'name': 'turnover', 'weight': 4, 'ascending': False},
 {'name': 'cap_mv_rate', 'weight': 1, 'ascending': False},
 {'name': 'bond_prem', 'weight': 1, 'ascending': True},
 {'name': 'pb', 'weight': 4, 'ascending': False},
 {'name': 'mod_conv_prem', 'weight': 1, 'ascending': True}]
 最优参数下的目标函数值： 0.25488680067429526


hold_num = 5 # 持有数量
threadhold_num = 5 # 轮动阈值
df.loc[df.list_days <= 3, 'filter'] = True # 排除新债
df.loc[df.left_years < 0.5, 'filter'] = True # 排除到期日小于1年的标的
df.loc[df.close > 135, 'filter'] = True  # 排除价格
df.loc[df.close < 100, 'filter'] = True  # 排除价格
[{'name': 'conv_prem', 'weight': 3, 'ascending': True},
 {'name': 'high', 'weight': 1, 'ascending': False},
 {'name': 'ps_ttm', 'weight': 5, 'ascending': False},
 {'name': 'amount', 'weight': 3, 'ascending': False},
 {'name': 'theory_value', 'weight': 1, 'ascending': True},
 {'name': 'theory_bias', 'weight': 1, 'ascending': False}]
 最优参数下的目标函数值： 0.23097303529050572


hold_num = 5 # 持有数量
threadhold_num = 5 # 轮动阈值
df.loc[df.list_days <= 3, 'filter'] = True # 排除新债
df.loc[df.left_years < 0.5, 'filter'] = True # 排除到期日小于1年的标的
df.loc[df.close > 140, 'filter'] = True  # 排除价格
df.loc[df.close < 100, 'filter'] = True  # 排除价格
[{'name': 'amount', 'weight': 5, 'ascending': False},
 {'name': 'ps_ttm', 'weight': 5, 'ascending': False},
 {'name': 'turnover', 'weight': 2, 'ascending': False},
 {'name': 'dblow', 'weight': 4, 'ascending': True}]
 最优参数下的目标函数值： 0.25899658642844425


hold_num = 5 # 持有数量
threadhold_num = 5 # 轮动阈值
df.loc[df.list_days <= 3, 'filter'] = True # 排除新债
df.loc[df.left_years < 0.5, 'filter'] = True # 排除到期日小于1年的标的
df.loc[df.close > 140, 'filter'] = True  # 排除价格
df.loc[df.close < 100, 'filter'] = True  # 排除价格
[{'name': 'theory_bias', 'weight': 5, 'ascending': True},
 {'name': 'volatility_stk', 'weight': 3, 'ascending': False},
 {'name': 'dblow', 'weight': 5, 'ascending': True},
 {'name': 'bond_prem', 'weight': 2, 'ascending': True},
 {'name': 'ps_ttm', 'weight': 4, 'ascending': False}]
 最优参数下的目标函数值： 0.2824041208675121


hold_num = 5 # 持有数量
threadhold_num = 5 # 轮动阈值
df.loc[df.list_days <= 3, 'filter'] = True # 排除新债
df.loc[df.left_years < 0.5, 'filter'] = True # 排除到期日小于1年的标的
df.loc[df.close > 140, 'filter'] = True  # 排除价格
df.loc[df.close < 100, 'filter'] = True  # 排除价格
[{'name': 'bond_prem', 'weight': 1, 'ascending': False},
 {'name': 'ps_ttm', 'weight': 5, 'ascending': False},
 {'name': 'close', 'weight': 1, 'ascending': True},
 {'name': 'remain_cap', 'weight': 1, 'ascending': True},
 {'name': 'amount', 'weight': 3, 'ascending': False},
 {'name': 'conv_prem', 'weight': 5, 'ascending': True}]
 最优参数下的目标函数值： 0.2755256487502302


hold_num = 5 # 持有数量
threadhold_num = 5 # 轮动阈值
df.loc[df.list_days <= 3, 'filter'] = True # 排除新债
df.loc[df.left_years < 0.5, 'filter'] = True # 排除到期日小于1年的标的
df.loc[df.close > 145, 'filter'] = True  # 排除价格
df.loc[df.close < 100, 'filter'] = True  # 排除价格
[{'name': 'theory_value', 'weight': 4, 'ascending': False},
 {'name': 'remain_size', 'weight': 1, 'ascending': True},
 {'name': 'ytm', 'weight': 4, 'ascending': True},
 {'name': 'bond_prem', 'weight': 1, 'ascending': True}]
 最优参数下的目标函数值： 0.21458172002323694


hold_num = 5 # 持有数量
threadhold_num = 5 # 轮动阈值
df.loc[df.list_days <= 3, 'filter'] = True # 排除新债
df.loc[df.left_years < 0.5, 'filter'] = True # 排除到期日小于1年的标的
df.loc[df.close > 145, 'filter'] = True  # 排除价格
df.loc[df.close < 100, 'filter'] = True  # 排除价格
[{'name': 'volatility_stk', 'weight': 4, 'ascending': False},
 {'name': 'conv_prem', 'weight': 5, 'ascending': True},
 {'name': 'dblow', 'weight': 3, 'ascending': True},
 {'name': 'low', 'weight': 1, 'ascending': True},
 {'name': 'pb', 'weight': 1, 'ascending': False}]
 最优参数下的目标函数值： 0.2208902941943307


hold_num = 5 # 持有数量
threadhold_num = 5 # 轮动阈值
df.loc[df.list_days <= 3, 'filter'] = True # 排除新债
df.loc[df.left_years < 0.5, 'filter'] = True # 排除到期日小于1年的标的
df.loc[df.close > 145, 'filter'] = True  # 排除价格
df.loc[df.close < 100, 'filter'] = True  # 排除价格
[{'name': 'cap_mv_rate', 'weight': 5, 'ascending': True},
 {'name': 'open', 'weight': 3, 'ascending': False},
 {'name': 'amount', 'weight': 3, 'ascending': False},
 {'name': 'theory_conv_prem', 'weight': 3, 'ascending': True},
 {'name': 'turnover', 'weight': 5, 'ascending': False},
 {'name': 'mod_conv_prem', 'weight': 2, 'ascending': True}]
 最优参数下的目标函数值： 0.2761565017692136




