
hold_num = 5 # 持有数量
threadhold_num = 3 # 轮动阈值
不排除新债
df.loc[df.close > 150, 'filter'] = True  # 排除价格
df.loc[df.close < 100, 'filter'] = True  # 排除价格
df.loc[df.left_years < 0.5, 'filter'] = True # 排除到期日小于1年的标的
[{'name': 'theory_conv_prem', 'weight': 4, 'ascending': False},
{'name': 'dblow', 'weight': 4, 'ascending': True},
{'name': 'theory_value', 'weight': 3, 'ascending': False},
{'name': 'ps_ttm', 'weight': 2, 'ascending': False}]
最优参数下的目标函数值： 0.3410

---------------------------------------------------------------------------------------------------------------------------------------------------------------------
hold_num = 5 # 持有数量
threadhold_num = 1 # 轮动阈值
df.loc[df.list_days <= 3, 'filter'] = True # 排除新债
df.loc[df.left_years < 0.5, 'filter'] = True # 排除到期日小于1年的标的
df.loc[df.close > 150, 'filter'] = True  # 排除价格
df.loc[df.close < 100, 'filter'] = True  # 排除价格
[{'name': 'pre_close', 'weight': 5, 'ascending': True},
 {'name': 'remain_cap', 'weight': 3, 'ascending': True},
 {'name': 'pb', 'weight': 4, 'ascending': False},
 {'name': 'ytm', 'weight': 5, 'ascending': True},
 {'name': 'dblow', 'weight': 5, 'ascending': True},
 {'name': 'cap_mv_rate', 'weight': 1, 'ascending': True}]
最优参数下的目标函数值： 0.2202778762461104


hold_num = 5 # 持有数量
threadhold_num = 2 # 轮动阈值
df.loc[df.list_days <= 3, 'filter'] = True # 排除新债
df.loc[df.left_years < 0.5, 'filter'] = True # 排除到期日小于1年的标的
df.loc[df.close > 150, 'filter'] = True  # 排除价格
df.loc[df.close < 100, 'filter'] = True  # 排除价格
[{'name': 'dblow', 'weight': 5, 'ascending': True},
 {'name': 'conv_prem', 'weight': 4, 'ascending': True},
 {'name': 'pb', 'weight': 3, 'ascending': False},
 {'name': 'remain_cap', 'weight': 3, 'ascending': True},
 {'name': 'close', 'weight': 2, 'ascending': True},
 {'name': 'ps_ttm', 'weight': 1, 'ascending': False}]
 最优参数下的目标函数值： 0.2609932558165049


hold_num = 5 # 持有数量
threadhold_num = 2 # 轮动阈值
df.loc[df.list_days <= 3, 'filter'] = True # 排除新债
df.loc[df.left_years < 0.5, 'filter'] = True # 排除到期日小于1年的标的
df.loc[df.close > 150, 'filter'] = True  # 排除价格
df.loc[df.close < 100, 'filter'] = True  # 排除价格
[{'name': 'remain_cap', 'weight': 2, 'ascending': True},
{'name': 'dblow', 'weight': 5, 'ascending': True},
{'name': 'option_value', 'weight': 1, 'ascending': True},
{'name': 'ps_ttm', 'weight': 3, 'ascending': False}]
最优参数下的目标函数值： 0.21541284181597775


hold_num = 5 # 持有数量
threadhold_num = 3 # 轮动阈值
df.loc[df.left_years < 0.5, 'filter'] = True # 排除到期日小于1年的标的
df.loc[df.close > 150, 'filter'] = True  # 排除价格
df.loc[df.close < 100, 'filter'] = True  # 排除价格
[{'name': 'theory_bias', 'weight': 5, 'ascending': True},
{'name': 'volatility_stk10', 'weight': 3, 'ascending': False},
{'name': 'stoch_signal3', 'weight': 5, 'ascending': True},
{'name': 'theory_conv_prem', 'weight': 1, 'ascending': False}]
最优参数下的目标函数值： 0.20013858898428682


hold_num = 5 # 持有数量
threadhold_num = 3 # 轮动阈值
df.loc[df.left_years < 0.5, 'filter'] = True # 排除到期日小于1年的标的
df.loc[df.close > 150, 'filter'] = True  # 排除价格
df.loc[df.close < 100, 'filter'] = True  # 排除价格
[{'name': 'cap_mv_rate', 'weight': 1, 'ascending': False},
 {'name': 'bond_prem', 'weight': 1, 'ascending': True},
 {'name': 'dblow', 'weight': 1, 'ascending': True},
 {'name': 'turnover', 'weight': 1, 'ascending': False},
 {'name': 'ps_ttm', 'weight': 3, 'ascending': False},
 {'name': 'remain_size', 'weight': 5, 'ascending': True}]


hold_num = 5 # 持有数量
threadhold_num = 3 # 轮动阈值
df.loc[df.left_years < 0.5, 'filter'] = True # 排除到期日小于1年的标的
df.loc[df.close > 150, 'filter'] = True  # 排除价格
df.loc[df.close < 100, 'filter'] = True  # 排除价格
[{'name': 'pct_chg', 'weight': 1, 'ascending': True},
 {'name': 'turnover', 'weight': 4, 'ascending': False},
 {'name': 'dblow', 'weight': 2, 'ascending': True},
 {'name': 'theory_bias', 'weight': 1, 'ascending': False},
 {'name': 'ps_ttm', 'weight': 4, 'ascending': False}]
最优参数下的目标函数值： 0.24083600408498684



hold_num = 5 # 持有数量
threadhold_num = 4 # 轮动阈值
df.loc[df.left_years < 0.5, 'filter'] = True # 排除到期日小于1年的标的
df.loc[df.close > 150, 'filter'] = True  # 排除价格
df.loc[df.close < 100, 'filter'] = True  # 排除价格
[{'name': 'theory_value', 'weight': 2, 'ascending': False},
 {'name': 'close', 'weight': 3, 'ascending': True},
 {'name': 'theory_bias', 'weight': 5, 'ascending': True},
 {'name': 'ytm', 'weight': 5, 'ascending': True},
 {'name': 'option_value', 'weight': 1, 'ascending': True}]
最优参数下的目标函数值： 0.23462269252864432


hold_num = 5 # 持有数量
threadhold_num = 1 # 轮动阈值
df.loc[df.left_years < 0.5, 'filter'] = True # 排除到期日小于1年的标的
df.loc[df.close > 130, 'filter'] = True  # 排除价格
df.loc[df.close < 100, 'filter'] = True  # 排除价格
[{'name': 'mod_conv_prem', 'weight': 2, 'ascending': True},
 {'name': 'ps_ttm', 'weight': 3, 'ascending': False},
 {'name': 'turnover', 'weight': 4, 'ascending': False},
 {'name': 'theory_bias', 'weight': 2, 'ascending': True}]
 最优参数下的目标函数值： 0.23686144738606374



hold_num = 5 # 持有数量
threadhold_num = 1 # 轮动阈值
df.loc[df.list_days <= 3, 'filter'] = True # 排除新债
df.loc[df.left_years < 0.5, 'filter'] = True # 排除到期日小于1年的标的
df.loc[df.close > 135, 'filter'] = True  # 排除价格
df.loc[df.close < 100, 'filter'] = True  # 排除价格
[{'name': 'ps_ttm', 'weight': 4, 'ascending': False},
 {'name': 'pe_ttm', 'weight': 1, 'ascending': True},
 {'name': 'turnover', 'weight': 3, 'ascending': False},
 {'name': 'dblow', 'weight': 2, 'ascending': True}]
最优参数下的目标函数值： 0.2475859624957888


hold_num = 5 # 持有数量
threadhold_num = 1 # 轮动阈值
df.loc[df.list_days <= 3, 'filter'] = True # 排除新债
df.loc[df.left_years < 0.5, 'filter'] = True # 排除到期日小于1年的标的
df.loc[df.close > 135, 'filter'] = True  # 排除价格
df.loc[df.close < 100, 'filter'] = True  # 排除价格
[{'name': 'amount', 'weight': 5, 'ascending': False},
 {'name': 'theory_bias', 'weight': 1, 'ascending': True},
 {'name': 'dblow', 'weight': 2, 'ascending': True},
 {'name': 'bond_prem', 'weight': 1, 'ascending': False},
 {'name': 'ps_ttm', 'weight': 5, 'ascending': False}]
最优参数下的目标函数值： 0.22575091126113023


hold_num = 5 # 持有数量
threadhold_num = 1 # 轮动阈值
df.loc[df.list_days <= 3, 'filter'] = True # 排除新债
df.loc[df.left_years < 0.5, 'filter'] = True # 排除到期日小于1年的标的
df.loc[df.close > 140, 'filter'] = True  # 排除价格
df.loc[df.close < 100, 'filter'] = True  # 排除价格
[{'name': 'dblow', 'weight': 5, 'ascending': True},
 {'name': 'volatility_stk', 'weight': 4, 'ascending': False},
 {'name': 'remain_cap', 'weight': 5, 'ascending': True}]
最优参数下的目标函数值： 0.24494537251642856



hold_num = 5 # 持有数量
threadhold_num = 1 # 轮动阈值
df.loc[df.list_days <= 3, 'filter'] = True # 排除新债
df.loc[df.left_years < 0.5, 'filter'] = True # 排除到期日小于1年的标的
df.loc[df.close > 140, 'filter'] = True  # 排除价格
df.loc[df.close < 100, 'filter'] = True  # 排除价格
[{'name': 'bond_prem', 'weight': 1, 'ascending': True},
 {'name': 'ps_ttm', 'weight': 5, 'ascending': False},
 {'name': 'turnover', 'weight': 4, 'ascending': False},
 {'name': 'dblow', 'weight': 5, 'ascending': True}]
最优参数下的目标函数值： 0.27705522231316615


hold_num = 5 # 持有数量
threadhold_num = 1 # 轮动阈值
df.loc[df.list_days <= 3, 'filter'] = True # 排除新债
df.loc[df.left_years < 0.5, 'filter'] = True # 排除到期日小于1年的标的
df.loc[df.close > 140, 'filter'] = True  # 排除价格
df.loc[df.close < 100, 'filter'] = True  # 排除价格
[{'name': 'turnover', 'weight': 5, 'ascending': False},
 {'name': 'option_value', 'weight': 1, 'ascending': True},
 {'name': 'mod_conv_prem', 'weight': 2, 'ascending': True},
 {'name': 'conv_prem', 'weight': 2, 'ascending': True},
 {'name': 'ps_ttm', 'weight': 5, 'ascending': False}]
最优参数下的目标函数值： 0.35513345820225783

hold_num = 5 # 持有数量
threadhold_num = 1 # 轮动阈值
df.loc[df.list_days <= 3, 'filter'] = True # 排除新债
df.loc[df.left_years < 0.5, 'filter'] = True # 排除到期日小于1年的标的
df.loc[df.close > 130, 'filter'] = True  # 排除价格
df.loc[df.close < 100, 'filter'] = True  # 排除价格
[{'name': 'theory_bias', 'weight': 3, 'ascending': True},
 {'name': 'volatility_stk', 'weight': 4, 'ascending': False},
 {'name': 'amount', 'weight': 4, 'ascending': False},
 {'name': 'mod_conv_prem', 'weight': 5, 'ascending': True},
 {'name': 'vol', 'weight': 2, 'ascending': False},
 {'name': 'remain_size', 'weight': 5, 'ascending': True}]
最优参数下的目标函数值： 0.20415334815646013


hold_num = 5 # 持有数量
threadhold_num = 1 # 轮动阈值
df.loc[df.list_days <= 3, 'filter'] = True # 排除新债
df.loc[df.left_years < 0.5, 'filter'] = True # 排除到期日小于1年的标的
df.loc[df.close > 135, 'filter'] = True  # 排除价格
df.loc[df.close < 100, 'filter'] = True  # 排除价格
[{'name': 'pre_close', 'weight': 2, 'ascending': False},
 {'name': 'dblow', 'weight': 1, 'ascending': False},
 {'name': 'remain_cap', 'weight': 1, 'ascending': True},
 {'name': 'volatility_stk', 'weight': 4, 'ascending': False},
 {'name': 'mod_conv_prem', 'weight': 3, 'ascending': True},
 {'name': 'theory_conv_prem', 'weight': 5, 'ascending': True}]
最优参数下的目标函数值： 0.2449724784352545


hold_num = 5 # 持有数量
threadhold_num = 1 # 轮动阈值
df.loc[df.list_days <= 3, 'filter'] = True # 排除新债
df.loc[df.left_years < 0.5, 'filter'] = True # 排除到期日小于1年的标的
df.loc[df.close > 140, 'filter'] = True  # 排除价格
df.loc[df.close < 100, 'filter'] = True  # 排除价格
[{'name': 'ps_ttm', 'weight': 5, 'ascending': False},
 {'name': 'remain_cap', 'weight': 4, 'ascending': True},
 {'name': 'amount', 'weight': 2, 'ascending': True},
 {'name': 'pure_value', 'weight': 2, 'ascending': False},
 {'name': 'mod_conv_prem', 'weight': 3, 'ascending': True},
 {'name': 'amount', 'weight': 4, 'ascending': False}]
最优参数下的目标函数值： 0.28565827177049985


hold_num = 5 # 持有数量
threadhold_num = 1 # 轮动阈值
df.loc[df.list_days <= 3, 'filter'] = True # 排除新债
df.loc[df.left_years < 0.5, 'filter'] = True # 排除到期日小于1年的标的
df.loc[df.close > 145, 'filter'] = True  # 排除价格
df.loc[df.close < 100, 'filter'] = True  # 排除价格
[{'name': 'remain_size', 'weight': 5, 'ascending': True},
 {'name': 'pb', 'weight': 5, 'ascending': False},
 {'name': 'cap_mv_rate', 'weight': 2, 'ascending': False},
 {'name': 'dblow', 'weight': 4, 'ascending': True}]
最优参数下的目标函数值： 0.22627020432231348

hold_num = 5 # 持有数量
threadhold_num = 1 # 轮动阈值
df.loc[df.list_days <= 3, 'filter'] = True # 排除新债
df.loc[df.left_years < 0.5, 'filter'] = True # 排除到期日小于1年的标的
df.loc[df.close > 145, 'filter'] = True  # 排除价格
df.loc[df.close < 100, 'filter'] = True  # 排除价格
[{'name': 'remain_size', 'weight': 4, 'ascending': True},
 {'name': 'conv_prem', 'weight': 4, 'ascending': True},
 {'name': 'option_value', 'weight': 5, 'ascending': True},
 {'name': 'theory_value', 'weight': 2, 'ascending': False},
 {'name': 'pb', 'weight': 5, 'ascending': False}]
最优参数下的目标函数值： 0.24296023841989434


hold_num = 5 # 持有数量
threadhold_num = 1 # 轮动阈值
df.loc[df.list_days <= 3, 'filter'] = True # 排除新债
df.loc[df.left_years < 0.5, 'filter'] = True # 排除到期日小于1年的标的
df.loc[df.close > 145, 'filter'] = True  # 排除价格
df.loc[df.close < 100, 'filter'] = True  # 排除价格
[{'name': 'remain_cap', 'weight': 2, 'ascending': True},
 {'name': 'theory_conv_prem', 'weight': 2, 'ascending': True},
 {'name': 'turnover', 'weight': 3, 'ascending': False},
 {'name': 'dblow', 'weight': 4, 'ascending': True},
 {'name': 'ps_ttm', 'weight': 4, 'ascending': False},
 {'name': 'pb', 'weight': 2, 'ascending': False}]
最优参数下的目标函数值： 0.2422584361239588


hold_num = 5 # 持有数量
threadhold_num = 2 # 轮动阈值
df.loc[df.list_days <= 3, 'filter'] = True # 排除新债
df.loc[df.left_years < 0.5, 'filter'] = True # 排除到期日小于1年的标的
df.loc[df.close > 130, 'filter'] = True  # 排除价格
df.loc[df.close < 100, 'filter'] = True  # 排除价格
[{'name': 'option_value', 'weight': 1, 'ascending': True},
 {'name': 'turnover', 'weight': 3, 'ascending': False},
 {'name': 'ps_ttm', 'weight': 3, 'ascending': False},
 {'name': 'conv_prem', 'weight': 5, 'ascending': True}]
最优参数下的目标函数值： 0.23561724570551812


hold_num = 5 # 持有数量
threadhold_num = 2 # 轮动阈值
df.loc[df.list_days <= 3, 'filter'] = True # 排除新债
df.loc[df.left_years < 0.5, 'filter'] = True # 排除到期日小于1年的标的
df.loc[df.close > 130, 'filter'] = True  # 排除价格
df.loc[df.close < 100, 'filter'] = True  # 排除价格
[{'name': 'open', 'weight': 1, 'ascending': True},
 {'name': 'mod_conv_prem', 'weight': 2, 'ascending': True},
 {'name': 'ps_ttm', 'weight': 3, 'ascending': False},
 {'name': 'remain_size', 'weight': 5, 'ascending': True},
 {'name': 'theory_bias', 'weight': 3, 'ascending': True}]
最优参数下的目标函数值： 0.2320471764427814


hold_num = 5 # 持有数量
threadhold_num = 2 # 轮动阈值
df.loc[df.list_days <= 3, 'filter'] = True # 排除新债
df.loc[df.left_years < 0.5, 'filter'] = True # 排除到期日小于1年的标的
df.loc[df.close > 130, 'filter'] = True  # 排除价格
df.loc[df.close < 100, 'filter'] = True  # 排除价格
[{'name': 'mod_conv_prem', 'weight': 3, 'ascending': True},
 {'name': 'pe_ttm', 'weight': 1, 'ascending': True},
 {'name': 'amount', 'weight': 5, 'ascending': False},
 {'name': 'pure_value', 'weight': 3, 'ascending': True},
 {'name': 'ps_ttm', 'weight': 5, 'ascending': False},
 {'name': 'turnover', 'weight': 3, 'ascending': False}]
最优参数下的目标函数值： 0.2418023750929268
