# 排除因子配置文件 - 简化版本
# 🎯 设计原则：以原始因子名为key，使用lower/upper统一约束类型
# 📊 简化配置结构，只使用lower(下限)和upper(上限)两种约束
# ✅ 移除normal概念，语义更清晰：lower=最小值约束，upper=最大值约束

filter_factors:
  # ========== 💰 价值类因子 (基于投资逻辑，仅需单向约束) ==========
  
  pure_value:
    name: "纯债价值"
    data_type: "numeric"
    desc: "纯债价值提供下行保护，永远不应排除高价值债券"
    lower:
      operators: ["gte"]  # 设置最小值，排除低价值债券
      value_options: [75, 80, 85, 90]  # 排除低价值债券，保留所有高价值
    # 投资逻辑: 纯债价值越高，投资安全边际越大

  theory_value:
    name: "理论价值"
    data_type: "numeric"
    desc: "理论价值是估值基准，高价值标的基本面通常更好"
    lower:
      operators: ["gte"]  # 设置最小值，排除低理论价值
      value_options: [80, 90, 100, 110]  # 排除低理论价值
    # 投资逻辑: 理论价值高的债券更具投资吸引力

  conv_value:
    name: "转股价值"
    data_type: "numeric"
    desc: "转股价值高说明正股表现好，是积极信号"
    lower:
      operators: ["gte"]  # 设置最小值，排除转股价值过低
      value_options: [50, 60, 70, 75]  # 排除转股价值过低
    # 投资逻辑: 转股价值高说明转股有吸引力

  option_value:
    name: "期权价值"
    data_type: "numeric"
    desc: "期权价值高说明波动率和上涨空间大"
    lower:
      operators: ["gte"]  # 设置最小值，排除期权价值过低
      value_options: [5, 10, 15]  # 排除期权价值过低
    # 投资逻辑: 期权价值高意味着未来收益潜力大

  # ========== 📉 成本类因子 (基于投资逻辑，仅需单向约束) ==========
  
  theory_conv_prem:
    name: "理论溢价率"
    data_type: "numeric"
    desc: "溢价率越低转股收益越高，永远不应排除低溢价债券"
    upper:
      operators: ["lte"]  # 设置最大值，排除高溢价债券
      value_options: [0.85, 0.9, 0.95, 1.0, 1.1, 1.2, 1.3]  # 排除高溢价债券
    # 投资逻辑: 溢价率低是投资优势

  bond_prem:
    name: "纯债溢价率"
    data_type: "numeric"
    desc: "纯债溢价率低说明相对纯债价值有优势"
    upper:
      operators: ["lte"]  # 设置最大值，排除纯债溢价过高
      value_options: [0.6, 0.7, 0.8, 1.0, 1.3]  # 排除纯债溢价过高
    # 投资逻辑: 纯债溢价过高说明债券被高估

  # ========== 📏 规模类因子 (基于流动性逻辑，仅需单向约束) ==========
  
  issue_size:
    name: "发行规模(亿)"
    data_type: "numeric"
    desc: "大规模债券流动性好，机构认可度高"
    lower:
      operators: ["gte"]  # 设置最小值，排除小规模债券
      value_options: [2, 3, 5]  # 排除小规模债券
    # 投资逻辑: 规模大通常意味着更好的流动性和信用质量

  # ========== ⚖️ 风险类因子 (需要双向约束，避免极值) ==========
  
  turnover:
    name: "换手率"
    data_type: "numeric"
    desc: "换手率需要平衡流动性不足和异常交易风险"
    lower:
      operators: ["gte"]  # 仅允许 >=
      value_options: [0.001, 0.003, 0.005, 0.007, 0.01]  # 排除流动性过低
    upper:
      operators: ["lte"]  # 仅允许 <=
      value_options: [0.5, 0.8, 2.0, 5.0]  # 排除异常高换手
    # 投资逻辑: 过低无流动性，过高可能异常

  turnover_5:
    name: "5日换手率"
    data_type: "numeric"
    desc: "5日累计换手率的风险控制"
    lower:
      operators: ["gte"]  # 仅允许 >=
      value_options: [0.01, 0.02, 0.05]  # 排除5日流动性过低
    upper:
      operators: ["lte"]  # 仅允许 <=
      value_options: [2.0, 5.0, 8.0, 10.0, 15.0]  # 排除5日异常高换手
    # 投资逻辑: 5日累计换手的合理范围控制

  pct_chg:
    name: "涨跌幅"
    data_type: "numeric"
    desc: "涨跌幅，排除极端上涨或下跌"
    lower:
      operators: ["gte"]  # 仅允许 >=
      value_options: [-0.15, -0.1, -0.05, -0.03]  # 排除极端下跌
    upper:
      operators: ["lte"]  # 仅允许 <=
      value_options: [0.008, 0.01, 0.015, 0.02]  # 排除极端上涨
    # 投资逻辑: 极端涨跌可能是异常交易或特殊事件

  pct_chg_5:
    name: "5日涨跌幅"
    data_type: "numeric"
    desc: "5日涨跌幅的风险控制"
    lower:
      operators: ["gte"]  # 仅允许 >=
      value_options: [-0.3, -0.2, -0.03, -0.015]  # 排除5日极端下跌
    upper:
      operators: ["lte"]  # 仅允许 <=
      value_options: [0.01, 0.015, 0.03, 0.05]  # 排除5日极端上涨
    # 投资逻辑: 5日极端涨跌的风险管理

  pct_chg_5_stk:
    name: "正股5日涨跌幅"
    data_type: "numeric"
    desc: "正股5日涨跌幅影响转债表现"
    lower:
      operators: ["gte"]  # 仅允许 >=
      value_options: [-0.2, -0.15, -0.08]  # 排除正股极端下跌
    upper:
      operators: ["lte"]  # 仅允许 <=
      value_options: [0.065, 0.07, 0.08, 0.1]  # 排除正股极端上涨
    # 投资逻辑: 正股极端涨跌影响转债表现

  alpha_pct_chg_5:
    name: "5日超额涨跌幅"
    data_type: "numeric"
    desc: "5日超额涨跌幅的风险管理"
    lower:
      operators: ["gte"]  # 仅允许 >=
      value_options: [-0.1, -0.07, -0.06, -0.05]  # 排除极端负超额
    upper:
      operators: ["lte"]  # 仅允许 <=
      value_options: [0.04, 0.06, 0.08, 0.1]  # 排除极端正超额
    # 投资逻辑: 超额收益极值的风险管理

  bias_5:
    name: "5日乖离率"
    data_type: "numeric"
    desc: "5日乖离率的回归风险控制"
    lower:
      operators: ["gte"]  # 仅允许 >=
      value_options: [-0.1, -0.05, -0.01, -0.008]  # 排除极端负乖离
    upper:
      operators: ["lte"]  # 仅允许 <=
      value_options: [0.01, 0.03, 0.05]  # 排除极端正乖离
    # 投资逻辑: 过度乖离往往伴随回归压力

  theory_bias:
    name: "理论偏离度"
    data_type: "numeric"
    desc: "理论偏离度的风险控制"
    lower:
      operators: ["gte"]  # 仅允许 >=
      value_options: [-0.5, -0.3, -0.15, -0.1]  # 排除极端负偏离
    upper:
      operators: ["lte"]  # 仅允许 <=
      value_options: [0.075, 0.1, 0.3, 0.5]  # 排除极端正偏离
    # 投资逻辑: 理论偏离过大说明定价失效

# 排除因子组合规则
combination_rules:
  max_factors: 2  # 保持简洁
  max_combinations: 6000
  # 🚨 注意: 同一因子的lower和upper约束不能同时选择

# 过拟合检测配置
overfitting_detection:
  # 时间段稳定性检查的变异系数阈值
  time_stability:
    # 正常情况下的变异系数阈值（无异常值时使用）
    normal_cv_threshold: 1.2
    # 检测到异常值时的宽松变异系数阈值
    outlier_tolerant_cv_threshold: 1.5
    # 异常值检测的IQR倍数
    outlier_iqr_multiplier: 1.5
    # 允许的最大异常窗口数量（超过此数量使用严格阈值）
    max_outlier_windows: 2

# ========== 🎯 简化设计总结 ==========
#
# 📊 简化优势:
# 1. 概念统一: 只使用lower/upper两种约束类型，语义更清晰
# 2. 代码简化: 移除三分支判断，只需处理两种情况  
# 3. 配置简化: 减少配置层级，降低复杂度
# 4. 逻辑直观: lower=最小值约束，upper=最大值约束
#
# 🔧 约束类型说明:
# - lower: 下限约束，设置最小值，排除过低的值（原normal中的gte约束）
# - upper: 上限约束，设置最大值，排除过高的值（原normal中的lte约束）
# - lower+upper: 双向约束，避免极值风险
#
# ✅ 移除normal的好处:
# 1. 概念更直观: lower/upper直接对应约束方向
# 2. 代码更简洁: 减少条件分支判断
# 3. 配置更清晰: 约束语义一目了然
# 4. 维护更容易: 统一的配置结构
#
# 🎯 预期效果:
# - 配置结构更简洁清晰
# - 代码逻辑更直观易懂
# - 维护成本显著降低
# - 约束语义更加明确